{"version":3,"sources":["sounds/bell.wav","components/Card.js","components/Timer.js","components/CardGroup.js","components/InputForm.js","App.js","index.js"],"names":["Card","props","children","Timer","time","minutes","Math","floor","slice","seconds","className","GardGroup","timersList","timers","map","timer","current","id","title","type","onClick","delete","value","length","start","InputForm","useState","enteredTitle","setEnteredTitle","enteredMinutes","setEnteredMinutes","enteredSeconds","setEnteredSeconds","onSubmit","event","preventDefault","enteredFormData","parseInt","htmlFor","onChange","target","min","max","App","timerStarted","setTimerStarted","allTimers","setAllTimers","currentTimer","setCurrentTimer","currentTimerId","setCurrentTimerId","useSound","bell","playBell","useEffect","console","log","prevState","interval","allTimersCopy","setInterval","clearInterval","CardGroup","newArr","filter","formData","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6f5ae16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bell.c22fa7b0.wav\";","import React from 'react'\r\nimport './Card.css'\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <>{props.children}</>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './Timer.css'\r\n\r\nfunction Timer(props) {\r\n    const time = props.time;\r\n    const minutes = (\"0\" + Math.floor(time / 60)).slice(-2);\r\n    const seconds = (\"0\" + time % 60).slice(-2);\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <span>\r\n                <h2>{minutes}:{seconds}</h2>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport Timer from './Timer'\r\nimport './cardGroup.css'\r\n\r\n\r\nfunction GardGroup(props) {\r\n    const timers = props.timers\r\n\r\n    // Return a list of timer cards\r\n    const timersList = timers.map((timer) => {\r\n        return (\r\n            <div className={`card ${props.current === timer.id && 'current'}`}>\r\n                <Card key={timer.id}>\r\n                    <h1>{timer.title}</h1>\r\n                    <Timer time={timer.time} />\r\n                    <input type=\"button\" id={timer.id} onClick={props.delete} value=\"delete\" />\r\n                </Card>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"card-group\">\r\n            {timersList}\r\n            {props.timers.length > 0 && <button onClick={props.start}>start</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GardGroup\r\n","import React, { useState } from 'react'\r\nimport './inputForm.css'\r\n\r\nconst InputForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('')\r\n    const [enteredMinutes, setEnteredMinutes] = useState('0')\r\n    const [enteredSeconds, setEnteredSeconds] = useState('0')\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredFormData = {\r\n            title: enteredTitle,\r\n            time: parseInt(enteredMinutes * 60) + parseInt(enteredSeconds)\r\n        };\r\n        props.onSubmit(enteredFormData); // send the form data to App.js\r\n\r\n        // clear the form data\r\n        setEnteredTitle('');\r\n        setEnteredMinutes('0');\r\n        setEnteredSeconds('0')\r\n    }\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const minutesChangeHandler = (event) => {\r\n        setEnteredMinutes(event.target.value);\r\n    }\r\n\r\n    const secondsChangeHandler = (event) => {\r\n        setEnteredSeconds(event.target.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formSubmitHandler}>\r\n                <h2>Add a new timer</h2>\r\n                <div className=\"title-input\">\r\n                    <label htmlFor=\"title\">title</label>\r\n                    <input type=\"text\" value={enteredTitle} id=\"title\" onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"time-input\">\r\n                    <div>\r\n                        <label htmlFor=\"minutes\">minutes</label>\r\n                        <input className=\"minutes-input\" id=\"minutes\" type=\"number\" value={enteredMinutes} min=\"0\" max=\"00:59\" onChange={minutesChangeHandler} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"seconds\">seconds</label>\r\n                        <input className=\"seconds-input\" type=\"number\" value={enteredSeconds} id=\"\" onChange={secondsChangeHandler} />\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"add timer\" />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm\r\n","import React, { useState, useEffect } from 'react'\nimport { useSound } from 'use-sound'\nimport bell from './sounds/bell.wav'\n\n\n\nimport './App.css';\nimport CardGroup from './components/CardGroup'\nimport InputForm from './components/InputForm'\n\n\n\n// const timerCards = []\n\nfunction App() {\n  const [timerStarted, setTimerStarted] = useState(false)\n  const [allTimers, setAllTimers] = useState([])\n  const [currentTimer, setCurrentTimer] = useState(0)\n  const [currentTimerId, setCurrentTimerId] = useState('')\n\n  const [playBell] = useSound(bell)\n\n\n\n  useEffect(() => setTimerStarted(false), [])\n\n  useEffect(() => {\n    if (allTimers.length > 0) {\n      const current = allTimers[currentTimer].id\n      setCurrentTimerId(current)\n      console.log(currentTimerId);\n    }\n  }, [allTimers, currentTimer, currentTimerId])\n\n  useEffect(() => {\n    // Stop the countdown when final timer reaches zero\n    if (currentTimer === (allTimers.length - 1) && allTimers[currentTimer].time === 0) {\n      setTimerStarted((prevState) => prevState = false);\n      setCurrentTimer(0);\n    }\n  }, [setTimerStarted, allTimers, currentTimer])\n\n\n\n  useEffect(() => {\n    let interval = null;\n    const allTimersCopy = [...allTimers]\n\n    if (timerStarted) {\n      const remaining = allTimersCopy[currentTimer].time\n      if (remaining <= 0) {\n        setCurrentTimer((prevState) => prevState + 1);\n        playBell()\n      }\n      interval = setInterval(() => {\n        allTimersCopy[currentTimer].time = allTimersCopy[currentTimer].time - 1\n        setAllTimers(allTimersCopy)\n      }, 1000)\n    } else {\n      clearInterval(interval)\n    }\n    return () => clearInterval(interval) // something about memory leaks\n  }, [timerStarted, allTimers, currentTimer, playBell])\n\n\n  function handleStart() {\n    setTimerStarted(!timerStarted);\n  }\n\n  const formSubmitHandler = (formData) => {\n    console.log('User entered form data:', formData)\n    let id = Math.floor(Math.random() * 10000000); // add an id to the newly created timer\n    formData = { ...formData, id }\n    setAllTimers([...allTimers, formData])\n\n  }\n\n  const handleDelete = (event) => {\n    console.log(event.target)\n    const newArr = [...allTimers].filter((timer) => timer.id !== parseInt(event.target.id))\n    setAllTimers(newArr);\n  }\n\n  return (\n    <div className=\"App\">\n      <CardGroup timers={allTimers} start={handleStart} delete={handleDelete} current={currentTimerId} />\n      <InputForm onSubmit={formSubmitHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}